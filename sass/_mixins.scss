/**
 * @file
 * Define your custom Sass mixins and extends here.
 * @see http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#defining_a_mixin
 */

/* ==========================================================================
   Clearfix extend
   ========================================================================== */

/**
 * Applies a clearfix ruleset using a placeholder selector. Placeholder selectors
 * do not get compiled uless they are called - removing the nesting issues that
 * can otherwise occur with extends.
 */

%clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

/* ==============================================================
   Visually hidden extend
   ============================================================== */

/**
 * Element-invisible as defined by snook.ca
 * @see http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 */

.element-invisible,
%element-invisible {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    clip: rect(1px 1px 1px 1px); // IE6 and IE7 use the wrong syntax.
  }
  clip: rect(1px, 1px, 1px, 1px);
}

/* Turns off the element-invisible effect. */
%element-invisible-off {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto;
}

.element-focusable,
%element-focusable {
  @extend %element-invisible;

  &:active,
  &:focus {
    @extend %element-invisible-off;
  }
}

/* ==============================================================
   Transition mixin
   ============================================================== */

@mixin trans($timing, $easing) {
  -webkit-transition: all $timing $easing;
  -moz-transition: all $timing $easing;
  -o-transition: all $timing $easing;
  transition: all $timing $easing;
}

/* ==============================================================
   Typography mixin
   ============================================================== */

/**
 * Spec vertical rhythm, weight & color in one line
 * Usage: @include groom(4, 34px, 400, $neutral-text);
 */

@mixin groom($base-line-unit-after, $font-size, $font-weight: auto, $color: auto) {
  margin: 0 auto rhythm($base-line-unit-after, $font-size);
  font-weight: $font-weight;
  color: $color;
}

/* ==============================================================
   Positioning mixin
   ============================================================== */

/**
 * For consistaent spacing above and below objects based on your base-line-height
 * Usage: @include slug(0, 1);
 */

$slug: $base-line-height;
@mixin slug($top-slug-count: 0, $bottom-slug-count: 0) {
  margin-top: ($slug * $top-slug-count);
  margin-bottom: ($slug * $bottom-slug-count);
}
